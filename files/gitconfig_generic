#
# Due to property file syntax, a semicolon starts a comment.
#
# To use a semicolon in aliases, enclose it in double quotes.
#

[user]
        name = viniciusban
        email = viniciusban@gmail.com

[versionsort]
    prereleaseSuffix = -alpha
    prereleaseSuffix = -beta
    prereleaseSuffix = -rc
    prereleaseSuffix = -pre

[merge]
        # ff = false

[color]
        ui = 1

[diff]
        tool = vimdiff

[difftool]
        prompt = no

[alias]
        aliases = !git config --list | grep ^alias | cut -d'=' -f 1 | cut -d'.' -f 2
        branches = branch -a
        remotes = remote -v
        stashes = stash list
        tags = tag -l -n1 --sort="version:refname"

        initialcommit = commit --allow-empty -m 'Initial commit'

        path = rev-parse --show-toplevel
        s = status -s
        currentbranch = rev-parse --abbrev-ref HEAD

        amend = commit --amend
        discard = checkout --
        unstage = reset HEAD

        l = log -10 --abbrev-commit --date=format:'%y-%m-%d %H:%M' --format='tformat:%C(auto)%h %ad %s'
        lg = log --graph -10 --branches --remotes --tags --format=format:'%Cgreen%h %Creset%<(75,trunc)%s (%cN, %cr) %Cred%d' --date-order

        nevermind = !git reset --hard HEAD && git clean -d -f
        rollbackkk = reset --mixed HEAD^
        rollback-to = reset --hard
        prunetags = fetch --prune origin '+refs/tags/*:refs/tags/*'

        pullc = !git fetch --tag --prune origin && git merge origin/$(git rev-parse --abbrev-ref HEAD) $(git rev-parse --abbrev-ref HEAD)

        pushc = !for remote in $(git remote | grep -v 'deploy')";"do echo '\n\n['"$remote"']'";"git push --tags $remote $(git rev-parse --abbrev-ref HEAD)";"done

[core]
        autocrlf = input
        editor = vim
[http]
        sslVerify = false
[push]
        default = matching

[commit]
        template = ~/projects/gitconfig/files/git_commit_template.txt

[rebase]
        autosquash = true
